{"ast":null,"code":"var _jsxFileName = \"D:\\\\github\\\\student-hub\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// src/pages/LoginPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport NotificationCard from '../components/NotificationCard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [usernameOrPhone, setUsernameOrPhone] = useState('');\n  const [otpRequested, setOtpRequested] = useState(false);\n  const [otp, setOtp] = useState('');\n  const [notification, setNotification] = useState(null);\n  const handleOtpRequest = async e => {\n    e.preventDefault();\n    if (!usernameOrPhone.trim()) {\n      setNotification({\n        message: 'Please input a valid username or phone number.',\n        borderColor: '#8D0C0C',\n        bgColor: '#E3D8D8',\n        textColor: '#6A0202'\n      });\n      return;\n    }\n    setNotification({\n      message: 'Nice work! Please check your phone or email for a One-Time Password (OTP) to complete the login process.',\n      borderColor: '#474747',\n      bgColor: '#F2F2F2',\n      textColor: '#2E2E2E'\n    });\n    try {\n      const response = await fetch('http://localhost:4000/api/auth/send-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          usernameOrPhone\n        })\n      });\n      if (response.ok) {\n        setOtpRequested(true);\n        console.log(`OTP requested for ${usernameOrPhone}`);\n      } else {\n        const data = await response.json();\n        setNotification({\n          message: data.message || 'Failed to send OTP. Please try again.',\n          borderColor: '#8D0C0C',\n          bgColor: '#E3D8D8',\n          textColor: '#6A0202'\n        });\n      }\n    } catch (error) {\n      console.error('Error requesting OTP:', error);\n      setNotification({\n        message: 'An error occurred while sending OTP. Please try again.',\n        borderColor: '#8D0C0C',\n        bgColor: '#E3D8D8',\n        textColor: '#6A0202'\n      });\n    }\n  };\n  const handleOtpSubmit = async e => {\n    e.preventDefault();\n    if (!otp.trim()) {\n      setNotification({\n        message: 'Please input an OTP.',\n        borderColor: '#8D0C0C',\n        bgColor: '#E3D8D8',\n        textColor: '#6A0202'\n      });\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:4000/api/auth/verify-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          usernameOrPhone,\n          otp\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setNotification({\n          message: 'OTP verified successfully! Redirecting...',\n          borderColor: '#474747',\n          bgColor: '#F2F2F2',\n          textColor: '#2E2E2E'\n        });\n        setTimeout(() => {\n          window.location.href = '/dashboard';\n        }, 2000); // Short delay before redirect\n      } else {\n        setNotification({\n          message: data.message || 'Incorrect OTP. Please try again.',\n          borderColor: '#8D0C0C',\n          bgColor: '#E3D8D8',\n          textColor: '#6A0202'\n        });\n      }\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      setNotification({\n        message: 'An error occurred. Please try again.',\n        borderColor: '#8D0C0C',\n        bgColor: '#E3D8D8',\n        textColor: '#6A0202'\n      });\n    }\n  };\n  const handleGoogleLoginSuccess = async credentialResponse => {\n    const token = credentialResponse.credential;\n    try {\n      const response = await fetch('http://localhost:4000/api/auth/google', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token\n        })\n      });\n      const data = await response.json();\n      console.log('Backend response:', data);\n    } catch (error) {\n      console.error('Error sending token to backend:', error);\n    }\n  };\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 10000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"YOUR_CLIENT_ID\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-page flex items-center justify-center min-h-screen bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-lg rounded-lg p-8 max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-[20px] font-bold text-center mb-6\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '210px'\n            },\n            children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n              onSuccess: handleGoogleLoginSuccess,\n              onError: () => console.log('Google login failed'),\n              shape: \"rectangular\",\n              size: \"large\",\n              theme: \"outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-6 border-gray-300 w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"usernameOrPhone\",\n              value: usernameOrPhone,\n              onChange: e => setUsernameOrPhone(e.target.value),\n              className: \"block w-full mt-1 px-3 py-2 border border-gray-300 rounded-[12px] shadow-sm focus:ring-customPurple focus:ring-1 focus:border-customPurple focus:outline-none placeholder:text-placeholderGray placeholder:text-[12px]\",\n              placeholder: \"Enter username or phone number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), otpRequested && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"otp\",\n              value: otp,\n              onChange: e => setOtp(e.target.value),\n              className: \"block w-full mt-1 px-3 py-2 border border-gray-300 rounded-[12px] shadow-sm focus:ring-customPurple focus:ring-1 focus:border-customPurple focus:outline-none placeholder:text-placeholderGray placeholder:text-[12px]\",\n              placeholder: \"Enter OTP\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center\",\n            children: otpRequested ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleOtpSubmit,\n              className: \"w-[155px] bg-customPurple text-white py-2 px-4 rounded-[25px] hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n              children: \"Verify OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleOtpRequest,\n              className: \"w-[155px] bg-customPurple text-white py-2 px-4 rounded-[25px] hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n              children: \"Send OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), notification && /*#__PURE__*/_jsxDEV(NotificationCard, {\n        message: notification.message,\n        borderColor: notification.borderColor,\n        bgColor: notification.bgColor,\n        textColor: notification.textColor,\n        onClose: () => setNotification(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"33T7QszNZXFgTingmVwbk9YOzb0=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","GoogleOAuthProvider","GoogleLogin","NotificationCard","jsxDEV","_jsxDEV","LoginPage","_s","usernameOrPhone","setUsernameOrPhone","otpRequested","setOtpRequested","otp","setOtp","notification","setNotification","handleOtpRequest","e","preventDefault","trim","message","borderColor","bgColor","textColor","response","fetch","method","headers","body","JSON","stringify","ok","console","log","data","json","error","handleOtpSubmit","setTimeout","window","location","href","handleGoogleLoginSuccess","credentialResponse","token","credential","timer","clearTimeout","clientId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","width","onSuccess","onError","shape","size","theme","type","id","value","onChange","target","placeholder","required","onClick","onClose","_c","$RefreshReg$"],"sources":["D:/github/student-hub/frontend/src/pages/LoginPage.js"],"sourcesContent":["// src/pages/LoginPage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\nimport NotificationCard from '../components/NotificationCard.js';\r\n\r\nfunction LoginPage() {\r\n  const [usernameOrPhone, setUsernameOrPhone] = useState('');\r\n  const [otpRequested, setOtpRequested] = useState(false);\r\n  const [otp, setOtp] = useState('');\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  const handleOtpRequest = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!usernameOrPhone.trim()) {\r\n      setNotification({\r\n        message: 'Please input a valid username or phone number.',\r\n        borderColor: '#8D0C0C',\r\n        bgColor: '#E3D8D8',\r\n        textColor: '#6A0202',\r\n      });\r\n      return;\r\n    }\r\n\r\n    setNotification({\r\n      message: 'Nice work! Please check your phone or email for a One-Time Password (OTP) to complete the login process.',\r\n      borderColor: '#474747',\r\n      bgColor: '#F2F2F2',\r\n      textColor: '#2E2E2E',\r\n    });\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/auth/send-otp', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ usernameOrPhone }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setOtpRequested(true);\r\n        console.log(`OTP requested for ${usernameOrPhone}`);\r\n      } else {\r\n        const data = await response.json();\r\n        setNotification({\r\n          message: data.message || 'Failed to send OTP. Please try again.',\r\n          borderColor: '#8D0C0C',\r\n          bgColor: '#E3D8D8',\r\n          textColor: '#6A0202',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error requesting OTP:', error);\r\n      setNotification({\r\n        message: 'An error occurred while sending OTP. Please try again.',\r\n        borderColor: '#8D0C0C',\r\n        bgColor: '#E3D8D8',\r\n        textColor: '#6A0202',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOtpSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!otp.trim()) {\r\n      setNotification({\r\n        message: 'Please input an OTP.',\r\n        borderColor: '#8D0C0C',\r\n        bgColor: '#E3D8D8',\r\n        textColor: '#6A0202',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/auth/verify-otp', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ usernameOrPhone, otp }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setNotification({\r\n          message: 'OTP verified successfully! Redirecting...',\r\n          borderColor: '#474747',\r\n          bgColor: '#F2F2F2',\r\n          textColor: '#2E2E2E',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.href = '/dashboard';\r\n        }, 2000); // Short delay before redirect\r\n      } else {\r\n        setNotification({\r\n          message: data.message || 'Incorrect OTP. Please try again.',\r\n          borderColor: '#8D0C0C',\r\n          bgColor: '#E3D8D8',\r\n          textColor: '#6A0202',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error verifying OTP:', error);\r\n      setNotification({\r\n        message: 'An error occurred. Please try again.',\r\n        borderColor: '#8D0C0C',\r\n        bgColor: '#E3D8D8',\r\n        textColor: '#6A0202',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleGoogleLoginSuccess = async (credentialResponse) => {\r\n    const token = credentialResponse.credential;\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/auth/google', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ token }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log('Backend response:', data);\r\n    } catch (error) {\r\n      console.error('Error sending token to backend:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 10000);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  return (\r\n    <GoogleOAuthProvider clientId=\"YOUR_CLIENT_ID\">\r\n      <div className=\"login-page flex items-center justify-center min-h-screen bg-gray-100\">\r\n        <div className=\"bg-white shadow-lg rounded-lg p-8 max-w-md w-full\">\r\n          <h2 className=\"text-[20px] font-bold text-center mb-6\">Login</h2>\r\n\r\n          {/* Google Sign-In Button */}\r\n          <div className=\"flex justify-center mt-6\">\r\n            <div style={{ width: '210px' }}>\r\n              <GoogleLogin\r\n                onSuccess={handleGoogleLoginSuccess}\r\n                onError={() => console.log('Google login failed')}\r\n                shape=\"rectangular\"\r\n                size=\"large\"\r\n                theme=\"outline\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <hr className=\"my-6 border-gray-300 w-full\" />\r\n\r\n          {/* Username or Phone Number Form */}\r\n          <form className=\"space-y-4\">\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"usernameOrPhone\"\r\n                value={usernameOrPhone}\r\n                onChange={(e) => setUsernameOrPhone(e.target.value)}\r\n                className=\"block w-full mt-1 px-3 py-2 border border-gray-300 rounded-[12px] shadow-sm focus:ring-customPurple focus:ring-1 focus:border-customPurple focus:outline-none placeholder:text-placeholderGray placeholder:text-[12px]\"\r\n                placeholder=\"Enter username or phone number\"\r\n              />\r\n            </div>\r\n\r\n            {/* OTP Input Field (only shows if OTP has been requested) */}\r\n            {otpRequested && (\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"otp\"\r\n                  value={otp}\r\n                  onChange={(e) => setOtp(e.target.value)}\r\n                  className=\"block w-full mt-1 px-3 py-2 border border-gray-300 rounded-[12px] shadow-sm focus:ring-customPurple focus:ring-1 focus:border-customPurple focus:outline-none placeholder:text-placeholderGray placeholder:text-[12px]\"\r\n                  placeholder=\"Enter OTP\"\r\n                  required\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* Submit Button */}\r\n            <div className=\"flex justify-center\">\r\n              {otpRequested ? (\r\n                <button\r\n                  onClick={handleOtpSubmit}\r\n                  className=\"w-[155px] bg-customPurple text-white py-2 px-4 rounded-[25px] hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                >\r\n                  Verify OTP\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={handleOtpRequest}\r\n                  className=\"w-[155px] bg-customPurple text-white py-2 px-4 rounded-[25px] hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                >\r\n                  Send OTP\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Notification Card */}\r\n        {notification && (\r\n          <NotificationCard\r\n            message={notification.message}\r\n            borderColor={notification.borderColor}\r\n            bgColor={notification.bgColor}\r\n            textColor={notification.textColor}\r\n            onClose={() => setNotification(null)}\r\n          />\r\n        )}\r\n      </div>\r\n    </GoogleOAuthProvider>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}