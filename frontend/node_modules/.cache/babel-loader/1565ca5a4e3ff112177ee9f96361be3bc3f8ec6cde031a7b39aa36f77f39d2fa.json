{"ast":null,"code":"// src/pages/LoginPage/handleOtpSubmit.js\n\nexport const handleOtpSubmit = async (event, usernameOrPhone, otp, setNotification) => {\n  event.preventDefault(); // Prevents default button click behavior\n\n  if (!otp.trim()) {\n    setNotification({\n      message: 'Please input an OTP.',\n      borderColor: '#8D0C0C',\n      bgColor: '#E3D8D8',\n      textColor: '#6A0202'\n    });\n    return;\n  }\n  try {\n    const response = await fetch('http://localhost:4000/api/auth/verify-otp', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        usernameOrPhone,\n        otp\n      }) // Only send relevant data\n    });\n    const data = await response.json();\n    if (response.ok) {\n      setNotification({\n        message: 'OTP verified successfully! Redirecting...',\n        borderColor: '#474747',\n        bgColor: '#F2F2F2',\n        textColor: '#2E2E2E'\n      });\n      setTimeout(() => {\n        window.location.href = '/dashboard'; // Redirect after a short delay\n      }, 2000);\n    } else {\n      setNotification({\n        message: data.message || 'Incorrect OTP. Please try again.',\n        borderColor: '#8D0C0C',\n        bgColor: '#E3D8D8',\n        textColor: '#6A0202'\n      });\n    }\n  } catch (error) {\n    console.error('Error verifying OTP:', error);\n    setNotification({\n      message: 'An error occurred. Please try again.',\n      borderColor: '#8D0C0C',\n      bgColor: '#E3D8D8',\n      textColor: '#6A0202'\n    });\n  }\n};","map":{"version":3,"names":["handleOtpSubmit","event","usernameOrPhone","otp","setNotification","preventDefault","trim","message","borderColor","bgColor","textColor","response","fetch","method","headers","body","JSON","stringify","data","json","ok","setTimeout","window","location","href","error","console"],"sources":["D:/Projects/student-hub/frontend/src/pages/LoginPage/handleOtpSubmit.js"],"sourcesContent":["// src/pages/LoginPage/handleOtpSubmit.js\r\n\r\nexport const handleOtpSubmit = async (event, usernameOrPhone, otp, setNotification) => {\r\n    event.preventDefault(); // Prevents default button click behavior\r\n  \r\n    if (!otp.trim()) {\r\n      setNotification({\r\n        message: 'Please input an OTP.',\r\n        borderColor: '#8D0C0C',\r\n        bgColor: '#E3D8D8',\r\n        textColor: '#6A0202',\r\n      });\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/auth/verify-otp', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ usernameOrPhone, otp }), // Only send relevant data\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setNotification({\r\n          message: 'OTP verified successfully! Redirecting...',\r\n          borderColor: '#474747',\r\n          bgColor: '#F2F2F2',\r\n          textColor: '#2E2E2E',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.href = '/dashboard'; // Redirect after a short delay\r\n        }, 2000);\r\n      } else {\r\n        setNotification({\r\n          message: data.message || 'Incorrect OTP. Please try again.',\r\n          borderColor: '#8D0C0C',\r\n          bgColor: '#E3D8D8',\r\n          textColor: '#6A0202',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error verifying OTP:', error);\r\n      setNotification({\r\n        message: 'An error occurred. Please try again.',\r\n        borderColor: '#8D0C0C',\r\n        bgColor: '#E3D8D8',\r\n        textColor: '#6A0202',\r\n      });\r\n    }\r\n  };\r\n  "],"mappings":"AAAA;;AAEA,OAAO,MAAMA,eAAe,GAAG,MAAAA,CAAOC,KAAK,EAAEC,eAAe,EAAEC,GAAG,EAAEC,eAAe,KAAK;EACnFH,KAAK,CAACI,cAAc,CAAC,CAAC,CAAC,CAAC;;EAExB,IAAI,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC,EAAE;IACfF,eAAe,CAAC;MACdG,OAAO,EAAE,sBAAsB;MAC/BC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE,SAAS;MAClBC,SAAS,EAAE;IACb,CAAC,CAAC;IACF;EACF;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;MACxEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEf,eAAe;QAAEC;MAAI,CAAC,CAAC,CAAE;IAClD,CAAC,CAAC;IAEF,MAAMe,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACfhB,eAAe,CAAC;QACdG,OAAO,EAAE,2CAA2C;QACpDC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE,SAAS;QAClBC,SAAS,EAAE;MACb,CAAC,CAAC;MACFW,UAAU,CAAC,MAAM;QACfC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,YAAY,CAAC,CAAC;MACvC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLpB,eAAe,CAAC;QACdG,OAAO,EAAEW,IAAI,CAACX,OAAO,IAAI,kCAAkC;QAC3DC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE,SAAS;QAClBC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOe,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5CrB,eAAe,CAAC;MACdG,OAAO,EAAE,sCAAsC;MAC/CC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE,SAAS;MAClBC,SAAS,EAAE;IACb,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}