{"ast":null,"code":"// handleOtpRequest.js\nexport const handleOtpRequest = async (e, usernameOrPhone, setNotification, setOtpRequested) => {\n  e.preventDefault();\n  console.log(\"handleOtpRequest triggered with:\", usernameOrPhone); // Log for debugging\n\n  if (!usernameOrPhone.trim()) {\n    setNotification({\n      message: 'Please input a valid username or phone number.',\n      borderColor: '#8D0C0C',\n      bgColor: '#E3D8D8',\n      textColor: '#6A0202'\n    });\n    return;\n  }\n  try {\n    const response = await fetch('http://localhost:4000/api/auth/send-otp', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        usernameOrPhone\n      })\n    });\n    if (response.ok) {\n      setOtpRequested(true);\n      console.log(`OTP requested for ${usernameOrPhone}`);\n      setNotification({\n        message: 'Nice work! Please check your phone or email for a One-Time Password (OTP) to complete the login process.',\n        borderColor: '#474747',\n        bgColor: '#F2F2F2',\n        textColor: '#2E2E2E'\n      });\n    } else {\n      const data = await response.json();\n      setNotification({\n        message: data.message || \"Invalid username or password, if you don't own an account please Register first\",\n        borderColor: '#8D0C0C',\n        bgColor: '#E3D8D8',\n        textColor: '#6A0202'\n      });\n    }\n  } catch (error) {\n    console.error('Error requesting OTP:', error);\n    setNotification({\n      message: 'An error occurred while sending OTP. Please try again.',\n      borderColor: '#8D0C0C',\n      bgColor: '#E3D8D8',\n      textColor: '#6A0202'\n    });\n  }\n};","map":{"version":3,"names":["handleOtpRequest","e","usernameOrPhone","setNotification","setOtpRequested","preventDefault","console","log","trim","message","borderColor","bgColor","textColor","response","fetch","method","headers","body","JSON","stringify","ok","data","json","error"],"sources":["D:/Projects/student-hub/frontend/src/pages/LoginPage/handleOtpRequest.js"],"sourcesContent":["// handleOtpRequest.js\r\nexport const handleOtpRequest = async (e, usernameOrPhone, setNotification, setOtpRequested) => {\r\n    e.preventDefault();\r\n    console.log(\"handleOtpRequest triggered with:\", usernameOrPhone); // Log for debugging\r\n  \r\n    if (!usernameOrPhone.trim()) {\r\n      setNotification({\r\n        message: 'Please input a valid username or phone number.',\r\n        borderColor: '#8D0C0C',\r\n        bgColor: '#E3D8D8',\r\n        textColor: '#6A0202',\r\n      });\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/auth/send-otp', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ usernameOrPhone }),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        setOtpRequested(true);\r\n        console.log(`OTP requested for ${usernameOrPhone}`);\r\n        setNotification({\r\n          message: 'Nice work! Please check your phone or email for a One-Time Password (OTP) to complete the login process.',\r\n          borderColor: '#474747',\r\n          bgColor: '#F2F2F2',\r\n          textColor: '#2E2E2E',\r\n        });\r\n      } else {\r\n        const data = await response.json();\r\n        setNotification({\r\n          message: data.message || \"Invalid username or password, if you don't own an account please Register first\",\r\n          borderColor: '#8D0C0C',\r\n          bgColor: '#E3D8D8',\r\n          textColor: '#6A0202',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error requesting OTP:', error);\r\n      setNotification({\r\n        message: 'An error occurred while sending OTP. Please try again.',\r\n        borderColor: '#8D0C0C',\r\n        bgColor: '#E3D8D8',\r\n        textColor: '#6A0202',\r\n      });\r\n    }\r\n  };\r\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,gBAAgB,GAAG,MAAAA,CAAOC,CAAC,EAAEC,eAAe,EAAEC,eAAe,EAAEC,eAAe,KAAK;EAC5FH,CAAC,CAACI,cAAc,CAAC,CAAC;EAClBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEL,eAAe,CAAC,CAAC,CAAC;;EAElE,IAAI,CAACA,eAAe,CAACM,IAAI,CAAC,CAAC,EAAE;IAC3BL,eAAe,CAAC;MACdM,OAAO,EAAE,gDAAgD;MACzDC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE,SAAS;MAClBC,SAAS,EAAE;IACb,CAAC,CAAC;IACF;EACF;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACtEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEjB;MAAgB,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAIW,QAAQ,CAACO,EAAE,EAAE;MACfhB,eAAe,CAAC,IAAI,CAAC;MACrBE,OAAO,CAACC,GAAG,CAAC,qBAAqBL,eAAe,EAAE,CAAC;MACnDC,eAAe,CAAC;QACdM,OAAO,EAAE,0GAA0G;QACnHC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE,SAAS;QAClBC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,MAAMS,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCnB,eAAe,CAAC;QACdM,OAAO,EAAEY,IAAI,CAACZ,OAAO,IAAI,iFAAiF;QAC1GC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE,SAAS;QAClBC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdjB,OAAO,CAACiB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7CpB,eAAe,CAAC;MACdM,OAAO,EAAE,wDAAwD;MACjEC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE,SAAS;MAClBC,SAAS,EAAE;IACb,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}